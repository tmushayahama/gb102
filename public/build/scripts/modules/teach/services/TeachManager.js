var teachManager=function($http,$q){var TeachManager=function(){this.teach=[]};return TeachManager.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},TeachManager.prototype.getTeach=function(teachId){var self=this,deferred=$q.defer();return $http.get("/api/teach/"+teachId).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},TeachManager.prototype.getSubTeachs=function(parentExploreId){var self=this,deferred=$q.defer();return $http.get("/api/teachs/subteachs/"+parentExploreId).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},TeachManager.prototype.editTeach=function(teachData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/teach/edit",data:teachData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},TeachManager};teachManager.$inject=["$http","$q"],angular.module("app.teach").service("TeachManager",teachManager);