var teachTimelinesManager=function($http,$q){var TeachTimelinesManager=function(){this.teachTimelines=[]};return TeachTimelinesManager.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},TeachTimelinesManager.prototype.getTeachTimelines=function(teachId){var self=this,deferred=$q.defer();return self.teachTimelines=[],$http.get("/api/teach/"+teachId+"/timelines").success(function(data){self.teachTimelines=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},TeachTimelinesManager.prototype.getTeachTimeline=function(teachId,timelineId){var self=this,deferred=$q.defer();return self.teachTimelines=[],$http.get("/api/teach/"+teachId+"/timeline/"+timelineId).success(function(data){self.teachTimelines=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},TeachTimelinesManager.prototype.createTeachTimeline=function(teachTimelineData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/teach/timeline/create",data:teachTimelineData}).success(function(data){self.teachTimelines.unshift(data),self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},TeachTimelinesManager.prototype.editTeachTimeline=function(teachTimelineData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/teach/timeline/edit",data:teachTimelineData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},TeachTimelinesManager};teachTimelinesManager.$inject=["$http","$q"],angular.module("app.teach").service("TeachTimelinesManager",teachTimelinesManager);