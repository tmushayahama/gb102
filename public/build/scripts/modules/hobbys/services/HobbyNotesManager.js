var hobbyNotesManager=function($http,$q){var HobbyNotesManager=function(){this.hobbyNotes=[]};return HobbyNotesManager.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},HobbyNotesManager.prototype.getHobbyNotes=function(hobbyId){var self=this,deferred=$q.defer();return self.hobbyNotes=[],$http.get("/api/hobby/"+hobbyId+"/notes").success(function(data){self.hobbyNotes=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},HobbyNotesManager.prototype.getHobbyNote=function(hobbyId,noteId){var self=this,deferred=$q.defer();return self.hobbyNotes=[],$http.get("/api/hobby/"+hobbyId+"/note/"+noteId).success(function(data){self.hobbyNotes=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},HobbyNotesManager.prototype.createHobbyNote=function(hobbyNoteData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/hobby/note/create",data:hobbyNoteData}).success(function(data){self.hobbyNotes.unshift(data),self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},HobbyNotesManager.prototype.editHobbyNote=function(hobbyNoteData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/hobby/note/edit",data:hobbyNoteData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},HobbyNotesManager};hobbyNotesManager.$inject=["$http","$q"],angular.module("app.hobbys").service("HobbyNotesManager",hobbyNotesManager);