var goalProgressSrv=function($http,$q){var GoalProgressSrv=function(){this.goalProgress=[]};return GoalProgressSrv.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},GoalProgressSrv.prototype.getGoalProgress=function(goalId){var self=this,deferred=$q.defer();return self.goalProgress=[],$http.get("/api/goal/"+goalId+"/progress").success(function(data){self.goalProgress=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},GoalProgressSrv.prototype.getGoalProgress=function(goalId,progressId){var self=this,deferred=$q.defer();return self.goalProgress=[],$http.get("/api/goal/"+goalId+"/progress/"+progressId).success(function(data){self.goalProgress=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},GoalProgressSrv.prototype.createGoalProgress=function(goalProgressData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/goal/progress/create",data:goalProgressData}).success(function(data){self.goalProgress.unshift(data),self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},GoalProgressSrv.prototype.editGoalProgress=function(goalProgressData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/goal/progress/edit",data:goalProgressData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},GoalProgressSrv};goalProgressSrv.$inject=["$http","$q"],angular.module("app.goal").service("GoalProgressSrv",goalProgressSrv);