var goalSrv=function($http,$q){var GoalSrv=function(){this.goal=[]};return GoalSrv.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},GoalSrv.prototype.getGoal=function(goalId){var self=this,deferred=$q.defer();return $http.get("/api/goal/"+goalId).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},GoalSrv.prototype.getSubGoals=function(parentexplorerId){var self=this,deferred=$q.defer();return $http.get("/api/goals/subgoals/"+parentexplorerId).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},GoalSrv.prototype.editGoal=function(goalData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/goal/edit",data:goalData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},GoalSrv};goalSrv.$inject=["$http","$q"],angular.module("app.goal").service("GoalSrv",goalSrv);