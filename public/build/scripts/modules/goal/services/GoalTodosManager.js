var goalTodosSrv=function($http,$q){var GoalTodosSrv=function(){this.goalTodos=[]};return GoalTodosSrv.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},GoalTodosSrv.prototype.getGoalTodos=function(goalId){var self=this,deferred=$q.defer();return self.goalTodos=[],$http.get("/api/goal/"+goalId+"/todos").success(function(data){self.goalTodos=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},GoalTodosSrv.prototype.getGoalTodo=function(goalId,todoId){var self=this,deferred=$q.defer();return self.goalTodos=[],$http.get("/api/goal/"+goalId+"/todo/"+todoId).success(function(data){self.goalTodos=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},GoalTodosSrv.prototype.createGoalTodo=function(goalTodoData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/goal/todo/create",data:goalTodoData}).success(function(data){self.goalTodos.unshift(data),self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},GoalTodosSrv.prototype.editGoalTodo=function(goalTodoData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/goal/todo/edit",data:goalTodoData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},GoalTodosSrv};goalTodosSrv.$inject=["$http","$q"],angular.module("app.goal").service("GoalTodosSrv",goalTodosSrv);