var promiseTodosManager=function($http,$q){var PromiseTodosManager=function(){this.promiseTodos=[]};return PromiseTodosManager.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},PromiseTodosManager.prototype.getPromiseTodos=function(promiseId){var self=this,deferred=$q.defer();return self.promiseTodos=[],$http.get("/api/promise/"+promiseId+"/todos").success(function(data){self.promiseTodos=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},PromiseTodosManager.prototype.getPromiseTodo=function(promiseId,todoId){var self=this,deferred=$q.defer();return self.promiseTodos=[],$http.get("/api/promise/"+promiseId+"/todo/"+todoId).success(function(data){self.promiseTodos=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},PromiseTodosManager.prototype.createPromiseTodo=function(promiseTodoData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/promise/todo/create",data:promiseTodoData}).success(function(data){self.promiseTodos.unshift(data),self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},PromiseTodosManager.prototype.editPromiseTodo=function(promiseTodoData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/promise/todo/edit",data:promiseTodoData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},PromiseTodosManager};promiseTodosManager.$inject=["$http","$q"],angular.module("app.promises").service("PromiseTodosManager",promiseTodosManager);