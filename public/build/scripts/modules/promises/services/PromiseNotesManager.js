var promiseNotesManager=function($http,$q){var PromiseNotesManager=function(){this.promiseNotes=[]};return PromiseNotesManager.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},PromiseNotesManager.prototype.getPromiseNotes=function(promiseId){var self=this,deferred=$q.defer();return self.promiseNotes=[],$http.get("/api/promise/"+promiseId+"/notes").success(function(data){self.promiseNotes=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},PromiseNotesManager.prototype.getPromiseNote=function(promiseId,noteId){var self=this,deferred=$q.defer();return self.promiseNotes=[],$http.get("/api/promise/"+promiseId+"/note/"+noteId).success(function(data){self.promiseNotes=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},PromiseNotesManager.prototype.createPromiseNote=function(promiseNoteData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/promise/note/create",data:promiseNoteData}).success(function(data){self.promiseNotes.unshift(data),self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},PromiseNotesManager.prototype.editPromiseNote=function(promiseNoteData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/promise/note/edit",data:promiseNoteData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},PromiseNotesManager};promiseNotesManager.$inject=["$http","$q"],angular.module("app.promises").service("PromiseNotesManager",promiseNotesManager);