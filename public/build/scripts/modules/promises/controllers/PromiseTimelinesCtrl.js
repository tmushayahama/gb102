var promiseTimelinesCtrl=function(PromiseTimelinesManager,$scope,$state,$stateParams,$http,$rootScope,$location,$uibModal,$log,$filter){var vm=this;vm.promiseId=$stateParams.promiseId,vm.promiseTimelinesCopy,vm.promiseTimelinesManager=new PromiseTimelinesManager,vm.timelineFormDisplay=!1,vm.defaultPromiseTimelineData={promiseId:$stateParams.promiseId,privacy:0},vm.newPromiseTimelineData=angular.copy(vm.defaultPromiseTimelineData),vm.showTimelineForm=function(){vm.timelineFormDisplay=!0},vm.createPromiseTimeline=function(data){vm.promiseTimelinesManager.createPromiseTimeline(data).then(function(response){vm.timelineFormDisplay=!1,vm.newPromiseTimelineData=angular.copy(vm.defaultPromiseTimelineData),vm.promiseTimelinesCopy=angular.copy(vm.promiseTimelinesManager.promiseTimelines)},function(response){console.log(response)})},vm.editPromiseTimeline=function(data){vm.promiseTimelinesManager.editPromiseTimeline(data).then(function(response){vm.timelineFormDisplay=!1,vm.newPromiseTimelineData=angular.copy(vm.defaultPromiseTimelineData),vm.promiseTimelinesCopy=angular.copy(vm.promiseTimelinesManager.promiseTimelines)},function(response){console.log(response)})},vm.editPromiseTimelineSections={details:function(promiseTimelineId,detail){var promiseTimelineData={promiseTimelineId:promiseTimelineId,title:detail.title,description:detail.description};vm.editPromiseTimeline(promiseTimelineData)}},vm.cancelPromiseTimeline=function(form){vm.timelineFormDisplay=!1,vm.newPromiseTimelineData=angular.copy(vm.defaultPromiseTimelineData),form&&(form.$setPristine(),form.$setUntouched())},vm.revertPromiseTimeline=function(promiseTimeline,promiseTimelineCopy){promiseTimeline=promiseTimelineCopy},vm.editedTimeline=null,$scope.$watch(angular.bind(this,function(){return vm.promiseTimelines}),function(){vm.doneCount=vm.promiseTimelinesManager.promiseTimelines.length-vm.remainingCount,vm.allChecked=!vm.remainingCount},!0),vm.editTimeline=function(promiseTimeline){vm.editedTimeline=promiseTimeline,vm.originalTimeline=angular.copy(promiseTimeline)},vm.doneEditing=function(promiseTimeline){vm.editedTimeline=null,promiseTimeline.title=promiseTimeline.title.trim(),promiseTimeline.title||vm.removeTimeline(promiseTimeline)},vm.openPromiseTimeline=function(promiseTimeline){var modalInstance=$uibModal.open({animation:!0,templateUrl:"promise-timeline-modal.html",controller:"PromiseTimelineCtrl as promiseTimelineCtrl",backdrop:"static",size:"xl",resolve:{promiseTimelineData:function(){return promiseTimeline}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})},vm.promiseTimelinesManager.getPromiseTimelines(vm.promiseId)};promiseTimelinesCtrl.$inject=["PromiseTimelinesManager","$scope","$state","$stateParams","$http","$rootScope","$location","$uibModal","$log","$filter"],angular.module("app.promises").controller("PromiseTimelinesCtrl",promiseTimelinesCtrl);