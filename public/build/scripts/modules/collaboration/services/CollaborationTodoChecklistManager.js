var collaborationTodoChecklistManager=function($http,$q){var CollaborationTodoChecklistManager=function(){this.collaborationTodoChecklist=[]};return CollaborationTodoChecklistManager.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},CollaborationTodoChecklistManager.prototype.getCollaborationTodoChecklist=function(todoId){var self=this,deferred=$q.defer();return self.collaborationTodoChecklist=[],$http.get("/api/todo/"+todoId+"/checklist").success(function(data){self.collaborationTodoChecklist=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},CollaborationTodoChecklistManager.prototype.getCollaborationTodoChecklistItem=function(collaborationId,todoId){var self=this,deferred=$q.defer();return $http.get("/api/collaboration/"+collaborationId+"/todo/"+todoId).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},CollaborationTodoChecklistManager.prototype.createCollaborationTodoChecklistItem=function(collaborationTodoChecklistData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/todo/checklist/create",data:collaborationTodoChecklistData}).success(function(data){self.collaborationTodoChecklist.unshift(data),self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},CollaborationTodoChecklistManager.prototype.editCollaborationTodoChecklistItem=function(collaborationTodoData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/todo/checklist/edit",data:collaborationTodoData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},CollaborationTodoChecklistManager};collaborationTodoChecklistManager.$inject=["$http","$q"],angular.module("app.collaboration").service("CollaborationTodoChecklistManager",collaborationTodoChecklistManager);