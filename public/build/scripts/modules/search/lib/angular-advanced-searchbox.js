!function(){"use strict";angular.module("angular-advanced-searchbox",[]).directive("nitAdvancedSearchbox",function(){return{restrict:"E",scope:{model:"=ngModel",parameters:"=",parametersLabel:"@",parametersDisplayLimit:"=",placeholder:"@",searchThrottleTime:"="},replace:!0,templateUrl:function(element,attr){return attr.templateUrl||"public/build/scripts/modules/search/views/templates/angular-advanced-searchbox.html"},controller:["$scope","$attrs","$element","$timeout","$filter",function($scope,$attrs,$element,$timeout,$filter){function restoreModel(){angular.forEach($scope.model,function(value,key){if("query"===key)$scope.searchQuery=value;else{var searchParam=$filter("filter")($scope.parameters,function(param){return param.key===key})[0];void 0!==searchParam&&$scope.addSearchParam(searchParam,value,!1)}})}function updateModel(command,key,value){searchThrottleTimer&&$timeout.cancel(searchThrottleTimer),changeBuffer=$filter("filter")(changeBuffer,function(change){return change.key!==key}),changeBuffer.push({command:command,key:key,value:value}),searchThrottleTimer=$timeout(function(){angular.forEach(changeBuffer,function(change){"delete"===change.command?delete $scope.model[change.key]:$scope.model[change.key]=change.value}),changeBuffer.length=0,$scope.$emit("advanced-searchbox:modelUpdated",$scope.model)},$scope.searchThrottleTime)}function getCurrentCaretPosition(input){if(!input)return 0;if("number"==typeof input.selectionStart)return"backward"===input.selectionDirection?input.selectionStart:input.selectionEnd;if(document.selection){input.focus();var selection=document.selection.createRange(),selectionLength=document.selection.createRange().text.length;return selection.moveStart("character",-input.value.length),selection.text.length-selectionLength}return 0}$scope.parametersLabel=$scope.parametersLabel||"Parameter Suggestions",$scope.parametersDisplayLimit=$scope.parametersDisplayLimit||8,$scope.placeholder=$scope.placeholder||"Search ...",$scope.searchThrottleTime=$scope.searchThrottleTime||1e3,$scope.searchParams=[],$scope.searchQuery="",$scope.setSearchFocus=!1;var searchThrottleTimer,changeBuffer=[];$scope.$watch("model",function(newValue,oldValue){angular.equals(newValue,oldValue)||(angular.forEach($scope.model,function(value,key){if("query"===key&&$scope.searchQuery!==value)$scope.searchQuery=value;else{var paramTemplate=$filter("filter")($scope.parameters,function(param){return param.key===key})[0],searchParam=$filter("filter")($scope.searchParams,function(param){return param.key===key})[0];void 0!==paramTemplate&&(void 0===searchParam?$scope.addSearchParam(paramTemplate,value,!1):searchParam.value!==value&&(searchParam.value=value))}}),angular.forEach($scope.searchParams,function(value,key){if(!$scope.model.hasOwnProperty(value.key)){var index=$scope.searchParams.map(function(e){return e.key}).indexOf(value.key);$scope.removeSearchParam(index)}}))},!0),$scope.searchParamValueChanged=function(param){updateModel("change",param.key,param.value)},$scope.searchQueryChanged=function(query){updateModel("change","query",query)},$scope.enterEditMode=function(e,index){if(void 0!==e&&e.stopPropagation(),void 0!==index){var searchParam=$scope.searchParams[index];searchParam.editMode=!0,$scope.$emit("advanced-searchbox:enteredEditMode",searchParam)}},$scope.leaveEditMode=function(e,index){if(void 0!==index){var searchParam=$scope.searchParams[index];searchParam.editMode=!1,$scope.$emit("advanced-searchbox:leavedEditMode",searchParam),searchParam.value||$scope.removeSearchParam(index)}},$scope.searchQueryTypeaheadOnSelect=function(item,model,label){$scope.addSearchParam(item),$scope.searchQuery="",updateModel("delete","query")},$scope.searchParamTypeaheadOnSelect=function(suggestedValue,searchParam){searchParam.value=suggestedValue,$scope.searchParamValueChanged(searchParam)},$scope.isUnsedParameter=function(value,index){return 0===$filter("filter")($scope.searchParams,function(param){return param.key===value.key}).length},$scope.addSearchParam=function(searchParam,value,enterEditModel){if(void 0===enterEditModel&&(enterEditModel=!0),$scope.isUnsedParameter(searchParam)){var newIndex=$scope.searchParams.push({key:searchParam.key,name:searchParam.name,placeholder:searchParam.placeholder,suggestedValues:searchParam.suggestedValues||[],restrictToSuggestedValues:searchParam.restrictToSuggestedValues||!1,value:value||""})-1;enterEditModel===!0&&$timeout(function(){$scope.enterEditMode(void 0,newIndex)},100),updateModel("add",searchParam.key,value)}},$scope.removeSearchParam=function(index){if(void 0!==index){var searchParam=$scope.searchParams[index];$scope.searchParams.splice(index,1),updateModel("delete",searchParam.key)}},$scope.removeAll=function(){$scope.searchParams.length=0,$scope.searchQuery="",$scope.model={}},$scope.editPrevious=function(currentIndex){void 0!==currentIndex&&$scope.leaveEditMode(void 0,currentIndex),currentIndex>0?$scope.enterEditMode(void 0,currentIndex-1):$scope.searchParams.length>0&&$scope.enterEditMode(void 0,$scope.searchParams.length-1)},$scope.editNext=function(currentIndex){void 0!==currentIndex&&($scope.leaveEditMode(void 0,currentIndex),currentIndex<$scope.searchParams.length-1?$scope.enterEditMode(void 0,currentIndex+1):$scope.setSearchFocus=!0)},$scope.keydown=function(e,searchParamIndex){var handledKeys=[8,9,13,37,39];if(-1!==handledKeys.indexOf(e.which)){var cursorPosition=getCurrentCaretPosition(e.target);8==e.which?0===cursorPosition&&(e.preventDefault(),$scope.editPrevious(searchParamIndex)):9==e.which?e.shiftKey?(e.preventDefault(),$scope.editPrevious(searchParamIndex)):(e.preventDefault(),$scope.editNext(searchParamIndex)):13==e.which?$scope.editNext(searchParamIndex):37==e.which?0===cursorPosition&&$scope.editPrevious(searchParamIndex):39==e.which&&cursorPosition===e.target.value.length&&$scope.editNext(searchParamIndex)}},void 0===$scope.model?$scope.model={}:restoreModel()}]}}).directive("nitSetFocus",["$timeout","$parse",function($timeout,$parse){return{restrict:"A",link:function($scope,$element,$attrs){var model=$parse($attrs.nitSetFocus);$scope.$watch(model,function(value){value===!0&&$timeout(function(){$element[0].focus()})}),$element.bind("blur",function(){$scope.$apply(model.assign($scope,!1))})}}}]).directive("nitAutoSizeInput",[function(){return{restrict:"A",scope:{model:"=ngModel"},link:function($scope,$element,$attrs){function resize(){shadow.text($element.val()||$element.attr("placeholder")),$element.css("width",shadow.outerWidth()+10)}var container=angular.element('<div style="position: fixed; top: -9999px; left: 0px;"></div>'),shadow=angular.element('<span style="white-space:pre;"></span>'),maxWidth="none"===$element.css("maxWidth")?$element.parent().innerWidth():$element.css("maxWidth");$element.css("maxWidth",maxWidth),angular.forEach(["fontSize","fontFamily","fontWeight","fontStyle","letterSpacing","textTransform","wordSpacing","textIndent","boxSizing","borderLeftWidth","borderRightWidth","borderLeftStyle","borderRightStyle","paddingLeft","paddingRight","marginLeft","marginRight"],function(css){shadow.css(css,$element.css(css))}),angular.element("body").append(container.append(shadow)),resize(),$scope.model?$scope.$watch("model",function(){resize()}):$element.on("keypress keyup keydown focus input propertychange change",function(){resize()})}}}])}();