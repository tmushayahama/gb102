var projectTimelinesManager=function($http,$q){var ProjectTimelinesManager=function(){this.projectTimelines=[]};return ProjectTimelinesManager.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},ProjectTimelinesManager.prototype.getProjectTimelines=function(projectId){var self=this,deferred=$q.defer();return self.projectTimelines=[],$http.get("/api/project/"+projectId+"/timelines").success(function(data){self.projectTimelines=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectTimelinesManager.prototype.getProjectTimeline=function(projectId,timelineId){var self=this,deferred=$q.defer();return self.projectTimelines=[],$http.get("/api/project/"+projectId+"/timeline/"+timelineId).success(function(data){self.projectTimelines=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectTimelinesManager.prototype.createProjectTimeline=function(projectTimelineData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/project/timeline/create",data:projectTimelineData}).success(function(data){self.projectTimelines.unshift(data),self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectTimelinesManager.prototype.editProjectTimeline=function(projectTimelineData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/project/timeline/edit",data:projectTimelineData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectTimelinesManager};projectTimelinesManager.$inject=["$http","$q"],angular.module("app.project").service("ProjectTimelinesManager",projectTimelinesManager);