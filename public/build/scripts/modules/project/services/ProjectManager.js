var projectSrv=function($http,$q){var ProjectSrv=function(){this.project=[]};return ProjectSrv.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},ProjectSrv.prototype.getProject=function(projectId){var self=this,deferred=$q.defer();return $http.get("/api/project/"+projectId).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectSrv.prototype.getSubProjects=function(parentexplorerId){var self=this,deferred=$q.defer();return $http.get("/api/projects/subprojects/"+parentexplorerId).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectSrv.prototype.editProject=function(projectData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/project/edit",data:projectData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectSrv};projectSrv.$inject=["$http","$q"],angular.module("app.project").service("ProjectSrv",projectSrv);