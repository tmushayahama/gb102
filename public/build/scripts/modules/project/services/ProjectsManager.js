var projectsSrv=function($http,$q){var ProjectsSrv=function(){this.projects=[]};return ProjectsSrv.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},ProjectsSrv.prototype.getAllProjects=function(){var self=this,deferred=$q.defer();return $http.get("/api/projects/all").success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectsSrv.prototype.getAppProjects=function(appName){var self=this,deferred=$q.defer();return $http.get("/api/projects/all/"+appName).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectsSrv.prototype.getMyProjects=function(){var self=this,deferred=$q.defer();return $http.get("/api/projects/mine").success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectsSrv.prototype.getProject=function(projectId,Id){var self=this,deferred=$q.defer();return self.project=[],$http.get("/api/project/"+projectId+"//"+Id).success(function(data){self.project=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectsSrv.prototype.createProject=function(projectData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/project/create",data:projectData}).success(function(data){self.projects.unshift(data),self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectsSrv.prototype.editProject=function(projectData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/projectedit",data:projectData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ProjectsSrv};projectsSrv.$inject=["$http","$q"],angular.module("app.project").service("ProjectsSrv",projectsSrv);