angular.module("app").service("ConstantsSrv",["$http","$q",function($http,$q){var ConstantsSrv=function(){};return ConstantsSrv.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},ConstantsSrv.prototype.getAppTypes=function(){var self=this,deferred=$q.defer();return $http.get("/api/constants/apptypes").success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ConstantsSrv.prototype.getIcons=function(type){var self=this,deferred=$q.defer();return $http.get("/api/constants/icons/"+type).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ConstantsSrv.prototype.getLevel=function(category){var self=this,deferred=$q.defer();return $http.get("/api/constants/level/"+category).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},ConstantsSrv}]);