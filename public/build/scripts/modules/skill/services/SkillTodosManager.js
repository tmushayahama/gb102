var skillTodosSrv=function($http,$q){var SkillTodosSrv=function(){this.skillTodos=[]};return SkillTodosSrv.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},SkillTodosSrv.prototype.getSkillTodos=function(skillId){var self=this,deferred=$q.defer();return self.skillTodos=[],$http.get("/api/skill/"+skillId+"/todos").success(function(data){self.skillTodos=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},SkillTodosSrv.prototype.getSkillTodo=function(skillId,todoId){var self=this,deferred=$q.defer();return self.skillTodos=[],$http.get("/api/skill/"+skillId+"/todo/"+todoId).success(function(data){self.skillTodos=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},SkillTodosSrv.prototype.createSkillTodo=function(skillTodoData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/skill/todo/create",data:skillTodoData}).success(function(data){self.skillTodos.unshift(data),self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},SkillTodosSrv.prototype.editSkillTodo=function(skillTodoData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/skill/todo/edit",data:skillTodoData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},SkillTodosSrv};skillTodosSrv.$inject=["$http","$q"],angular.module("app.skills").service("SkillTodosSrv",skillTodosSrv);