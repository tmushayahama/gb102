var skillSwipesSrv=function($http,$q){var SkillSwipesSrv=function(){this.skillSwipes=[]};return SkillSwipesSrv.prototype.deferredHandler=function(data,deferred,defaultMsg){return data&&"object"==typeof data||(this.error="Error"),!this.error&&data.result&&data.result.error&&(this.error=data.result.error),!this.error&&data.error&&(this.error=data.error.message),!this.error&&defaultMsg&&(this.error=defaultMsg),this.error?deferred.reject(data):deferred.resolve(data)},SkillSwipesSrv.prototype.getSkillSwipes=function(){var self=this,deferred=$q.defer();return self.skillSwipes=[],$http.get("/api/skills/swipes").success(function(data){self.skillSwipes=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},SkillSwipesSrv.prototype.getSkillSwipe=function(){var self=this,deferred=$q.defer();return self.skill=[],$http.get("/api/skills/swipe").success(function(data){self.skill=data,self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},SkillSwipesSrv.prototype.createSkillSwipe=function(skillSwipeData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/skills/swipe/create",data:skillSwipeData}).success(function(data){self.skillSwipes.unshift(data),self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},SkillSwipesSrv.prototype.editSkill=function(skillData){var self=this,deferred=$q.defer();return $http({method:"POST",url:"/api/skilledit",data:skillData}).success(function(data){self.deferredHandler(data,deferred)}).error(function(data){self.deferredHandler(data,deferred,"Unknown error")}),deferred.promise},SkillSwipesSrv};skillSwipesSrv.$inject=["$http","$q"],angular.module("app.skills").service("SkillSwipesSrv",skillSwipesSrv);